---
- name: Set convenience facts for this VM
  ansible.builtin.set_fact:
    vm_name: "{{ event_vm_object.metadata.name }}"
    vm_namespace: "{{ event_vm_object.metadata.namespace }}"

# --- Primary Check ---
# Check the incoming event for a deletionTimestamp first.
- name: "Log skip - VM deletion detected from incoming event"
  ansible.builtin.debug:
    msg: "Skipping {{ vm_name }} in {{ vm_namespace }}: VM has deletionTimestamp (from event)."
  when: event_vm_object.metadata.deletionTimestamp is defined

# --- Main Processing Block ---
# Only run this block if the incoming event does NOT have a deletionTimestamp.
- name: Process VM
  ansible.builtin.block:

    - name: Get the LATEST version of the VM object from the cluster
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ vm_name }}"
        namespace: "{{ vm_namespace }}"
      register: live_vm_info_result

    # Check if k8s_info found the VM. If not, it was deleted between
    # the event and this task.
    - name: "Log skip - VM not found in cluster (likely deleted)"
      ansible.builtin.debug:
        msg: "Skipping {{ vm_name }} in {{ vm_namespace }}: VM not found in cluster (was likely deleted)."
      when: live_vm_info_result.resources | length == 0

    # --- Process Live Object Block ---
    # This block is now safe and will only run if the VM was found
    - name: Process Live VM Object
      ansible.builtin.block:

        - name: "Set 'vm_object' fact (the live object) and check conditions"
          ansible.builtin.set_fact:
            vm_object: "{{ live_vm_info_result.resources[0] }}"
            is_dr_enabled: "{{ (live_vm_info_result.resources[0].metadata.labels['dr.demojam.com/enabled'] | default('false')) == 'true' }}"
            # Check for deletion on the live object too, just in case
            is_deleting_live: "{{ live_vm_info_result.resources[0].metadata.deletionTimestamp is defined }}"

        - name: "Process the single VM (only if DR enabled and not deleting)"
          ansible.builtin.include_tasks:
            file: tasks/process_single_vm.yml
          vars:
            force_sync: true
          when:
            - is_dr_enabled
            - not is_deleting_live

        - name: "Log skip - VM is being deleted (from live object)"
          ansible.builtin.debug:
            msg: "Skipping {{ vm_name }} in {{ vm_namespace }}: VM has deletionTimestamp (from live cluster object)."
          when: is_deleting_live

        - name: "Log skip - DR not enabled (from live object)"
          ansible.builtin.debug:
            msg: "Skipping {{ vm_name }} in {{ vm_namespace }}: DR is not enabled (dr.demojam.com/enabled label is not 'true')."
          when: not is_dr_enabled

      when: live_vm_info_result.resources | length > 0

  when: event_vm_object.metadata.deletionTimestamp is not defined